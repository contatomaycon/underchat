version: '3'
services:
  under-db:
    image: postgres:latest
    container_name: under-db
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=underchat
    command:
      - postgres
      - -c
      - wal_level=logical
      - -c
      - max_replication_slots=10
      - -c
      - max_wal_senders=10
    ports:
      - 5432:5432
    networks:
      - underchat
    restart: always
    volumes:
      - db_postgresql:/var/lib/postgresql
      - db_postgresql_data:/var/lib/postgresql/data

  under-db-elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.0.1
    container_name: under-db-elastic
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=admin
      - cluster.name=es-cluster
      - node.name=es-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - db_elastic_data:/usr/share/elasticsearch/data
    ports:
      - '9201:9200'
    networks:
      - underchat
    restart: always

  under-redis:
    container_name: under-redis
    image: redis:7.2.4
    command: redis-server --requirepass dY5MRW2^!jxHX
    ports:
      - 6379:6379
    restart: always
    networks:
      - underchat

  under-elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.0.1
    container_name: under-elasticsearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=admin
      - cluster.name=es-cluster
      - node.name=es-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - '9200:9200'
    networks:
      - underchat
    restart: always

  under-temporal-db:
    image: postgres:latest
    container_name: under-temporal-db
    environment:
      - POSTGRES_USER=temporal
      - POSTGRES_PASSWORD=temporal
      - POSTGRES_DB=temporal
    networks:
      - underchat
    restart: always
    volumes:
      - temporal_postgresql:/var/lib/postgresql/data

  under-temporal:
    image: temporalio/auto-setup:latest
    container_name: under-temporal
    ports:
      - '7233:7233'
    restart: always
    environment:
      - TEMPORAL_CLI_ADDRESS=under-temporal:7233
      - DB=postgres12
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=under-temporal-db
      - DB_PORT=5432
    depends_on:
      - under-temporal-db
    networks:
      - underchat

  under-temporal-admin-tools:
    image: temporalio/admin-tools:latest
    container_name: under-temporal-admin-tools
    restart: always
    environment:
      - TEMPORAL_CLI_ADDRESS=under-temporal:7233
    depends_on:
      - under-temporal
    networks:
      - underchat

  under-temporal-web:
    image: temporalio/ui:latest
    container_name: under-temporal-web
    restart: always
    ports:
      - '8088:8080'
    environment:
      - TEMPORAL_ADDRESS=under-temporal:7233
    depends_on:
      - under-temporal
    networks:
      - underchat

  under-atlas-db:
    image: postgres:latest
    container_name: under-atlas-db
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=dev
    networks:
      - underchat
    restart: always
    volumes:
      - atlas_db_postgresql:/var/lib/postgresql
      - atlas_db_postgresql_data:/var/lib/postgresql/data

  under-atlas:
    build:
      context: .
      dockerfile: ./infra/atlas/Dockerfile
    container_name: under-atlas
    user: '1000:1000'
    env_file:
      - .env
    networks:
      - underchat
    depends_on:
      - under-db
      - under-atlas-db
    volumes:
      - ./:/app

  under-kafka:
    image: bitnami/kafka:latest
    container_name: under-kafka
    ports:
      - '9092:9092'
      - '29092:29092'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://under-kafka:9092,EXTERNAL://10.0.2.2:29092
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@under-kafka:9093
    networks:
      - underchat
    volumes:
      - kafka_data:/bitnami/kafka
    restart: always

  under-kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: under-kafdrop
    ports:
      - '9000:9000'
    environment:
      - KAFKA_BROKERCONNECT=under-kafka:9092
      - JVM_OPTS=-Xms32M -Xmx64M
    depends_on:
      - under-kafka
    networks:
      - underchat
    restart: always

  under-centrifugo:
    image: centrifugo/centrifugo:latest
    container_name: under-centrifugo
    restart: unless-stopped
    ports:
      - '8000:8000'
    volumes:
      - ./infra/centrifugo/config.json:/etc/centrifugo/config.json:ro
    entrypoint: ['centrifugo']
    command: ['--config', '/etc/centrifugo/config.json']

networks:
  underchat:

volumes:
  postgresql:
  temporal_postgresql:
  postgresql_data:
  db_postgresql:
  db_postgresql_data:
  db_elastic_data:
  atlas_db_postgresql:
  atlas_db_postgresql_data:
  elasticsearch_data:
  kafka_data:
