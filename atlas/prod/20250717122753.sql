-- Create "permission_module" table
CREATE TABLE "permission_module" (
  "module_id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "module" character varying(100) NOT NULL,
  "created_at" timestamptz NULL DEFAULT now(),
  "updated_at" timestamptz NULL DEFAULT now(),
  PRIMARY KEY ("module_id")
);
-- Create "permission_action" table
CREATE TABLE "permission_action" (
  "permission_action_id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "permission_module_id" integer NOT NULL,
  "action" character varying(100) NOT NULL,
  "created_at" timestamptz NULL DEFAULT now(),
  "updated_at" timestamptz NULL DEFAULT now(),
  PRIMARY KEY ("permission_action_id"),
  CONSTRAINT "permission_action_permission_module_id_permission_module_module" FOREIGN KEY ("permission_module_id") REFERENCES "permission_module" ("module_id") ON UPDATE NO ACTION ON DELETE NO ACTION
);
-- Create "permission_role" table
CREATE TABLE "permission_role" (
  "permission_role_id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "name" character varying(200) NOT NULL,
  "created_at" timestamptz NULL DEFAULT now(),
  "updated_at" timestamptz NULL DEFAULT now(),
  PRIMARY KEY ("permission_role_id")
);
-- Create "permission_assignment" table
CREATE TABLE "permission_assignment" (
  "permission_assignment_id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "permission_role_id" integer NOT NULL,
  "user_id" smallint NULL,
  "created_at" timestamptz NULL DEFAULT now(),
  "updated_at" timestamptz NULL DEFAULT now(),
  PRIMARY KEY ("permission_assignment_id"),
  CONSTRAINT "permission_assignment_permission_role_id_permission_role_permis" FOREIGN KEY ("permission_role_id") REFERENCES "permission_role" ("permission_role_id") ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT "permission_assignment_user_id_user_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "user" ("user_id") ON UPDATE NO ACTION ON DELETE NO ACTION
);
-- Create "permission_role_action" table
CREATE TABLE "permission_role_action" (
  "permission_role_action_id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "permission_action_id" integer NOT NULL,
  "permission_role_id" integer NOT NULL,
  "created_at" timestamptz NULL DEFAULT now(),
  "updated_at" timestamptz NULL DEFAULT now(),
  PRIMARY KEY ("permission_role_action_id"),
  CONSTRAINT "permission_role_action_permission_action_id_permission_action_p" FOREIGN KEY ("permission_action_id") REFERENCES "permission_action" ("permission_action_id") ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT "permission_role_action_permission_role_id_permission_role_permi" FOREIGN KEY ("permission_role_id") REFERENCES "permission_role" ("permission_role_id") ON UPDATE NO ACTION ON DELETE NO ACTION
);
-- Create "server_status" table
CREATE TABLE "server_status" (
  "server_status_id" smallint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "status" character varying(500) NULL,
  "created_at" timestamptz NULL DEFAULT now(),
  "updated_at" timestamptz NULL DEFAULT now(),
  PRIMARY KEY ("server_status_id")
);
-- Create "server" table
CREATE TABLE "server" (
  "server_id" smallint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "server_status_id" smallint NOT NULL,
  "name" character varying(200) NOT NULL,
  "created_at" timestamptz NULL DEFAULT now(),
  "updated_at" timestamptz NULL DEFAULT now(),
  "deleted_at" timestamptz NULL,
  PRIMARY KEY ("server_id"),
  CONSTRAINT "server_server_status_id_server_status_server_status_id_fk" FOREIGN KEY ("server_status_id") REFERENCES "server_status" ("server_status_id") ON UPDATE NO ACTION ON DELETE NO ACTION
);
-- Create "server_ssh" table
CREATE TABLE "server_ssh" (
  "server_ssh_id" smallint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "server_id" smallint NOT NULL,
  "ssh_ip" character varying(200) NOT NULL,
  "ssh_port" integer NOT NULL,
  "ssh_username" character varying(1000) NOT NULL,
  "ssh_password" character varying(1000) NOT NULL,
  "created_at" timestamptz NULL DEFAULT now(),
  "updated_at" timestamptz NULL DEFAULT now(),
  "deleted_at" timestamptz NULL,
  PRIMARY KEY ("server_ssh_id"),
  CONSTRAINT "server_ssh_server_id_server_server_id_fk" FOREIGN KEY ("server_id") REFERENCES "server" ("server_id") ON UPDATE NO ACTION ON DELETE NO ACTION
);
