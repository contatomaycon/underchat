{
  "name": "underchat",
  "private": true,
  "version": "1.0.0",
  "description": "Underchat",
  "engines": {
    "node": "22.17.0"
  },
  "packageManager": "pnpm@9.3.0",
  "scripts": {
    "preinstall": "node -e \"if (process.version !== 'v22.17.0') { console.error('Erro: Node.js 22.17.0 é necessário.'); process.exit(1); }\"",
    "dev": "turbo run dev",
    "dev:public": "turbo run dev --filter=public",
    "dev:manager": "turbo run dev --filter=manager",
    "dev:balancer": "turbo run dev --filter=balancer",
    "dev:service": "turbo run dev --filter=service",
    "build": "turbo run build",
    "build:public": "GENERATE_OPENAPI=true turbo run build --filter=public",
    "build:manager": "turbo run build --filter=manager",
    "build:balancer": "turbo run build --filter=balancer",
    "build:service": "turbo run build --filter=service",
    "lint": "pnpx eslint .",
    "lint:fix": "pnpx eslint . --fix",
    "sonar": "sonar-scanner -X",
    "sonar:public": "turbo run sonar --filter=public",
    "sonar:manager": "turbo run sonar --filter=manager",
    "sonar:balancer": "turbo run sonar --filter=balancer",
    "sonar:service": "turbo run sonar --filter=service",
    "test": "jest --runInBand",
    "test:watch": "jest --watch --runInBand",
    "test:coverage": "jest --coverage",
    "atlas:run": "atlas migrate hash --env ${ENV} --var DB_ATLAS=${DB_ATLAS} && atlas migrate apply --env ${ENV} --var DB_ATLAS=${DB_ATLAS} --url \"${DB_DATABASE_URL}\"",
    "atlas:run:docker": "docker-compose run --rm -T -e ENV -e DB_ATLAS -e DB_DATABASE_URL under-atlas sh -c 'atlas migrate hash --env ${ENV} --var DB_ATLAS=${DB_ATLAS} && atlas migrate diff --env ${ENV} --var DB_ATLAS=${DB_ATLAS} && atlas migrate apply --env ${ENV} --var DB_ATLAS=${DB_ATLAS} --url \"${DB_DATABASE_URL}\"'",
    "atlas:run:dev": "atlas migrate hash --env ${ENV} --var DB_ATLAS=${DB_ATLAS} && atlas migrate apply --exec-order non-linear --env ${ENV} --var DB_ATLAS=${DB_ATLAS} --url \"${DB_DATABASE_URL}\"",
    "migrate:local": "ENV=prod pnpm run atlas:run:docker",
    "migrate:dev": "ENV=prod pnpm run atlas:run",
    "migrate:prod": "ENV=prod pnpm run atlas:run",
    "seed:local": "pnpm run migrate:local && ENV=dev docker-compose run --rm -T -e ENV -e DB_ATLAS -e DB_DATABASE_URL under-atlas sh -c 'atlas migrate hash --env ${ENV} --var DB_ATLAS=${DB_ATLAS} && atlas migrate apply --exec-order non-linear --env ${ENV} --var DB_ATLAS=${DB_ATLAS} --url \"${DB_DATABASE_URL}\"'",
    "seed:dev": "ENV=dev pnpm run atlas:run:dev",
    "seed:zipcode:local": "pnpm run migrate:local && ENV=zipcode docker-compose run --rm -T -e ENV -e DB_ATLAS -e DB_DATABASE_URL under-atlas sh -c 'atlas migrate hash --env ${ENV} --var DB_ATLAS=${DB_ATLAS} && atlas migrate apply --exec-order non-linear --env ${ENV} --var DB_ATLAS=${DB_ATLAS} --url \"${DB_DATABASE_URL}\"'",
    "seed:zipcode:dev": "pnpm run migrate:dev && ENV=zipcode atlas migrate hash --env ${ENV} --var DB_ATLAS=${DB_ATLAS} && atlas migrate apply --exec-order non-linear --env ${ENV} --var DB_ATLAS=${DB_ATLAS} --url \"${DB_DATABASE_URL}\"",
    "seed:zipcode:prod": "pnpm run migrate:prod && ENV=zipcode atlas migrate hash --env ${ENV} --var DB_ATLAS=${DB_ATLAS} && atlas migrate apply --exec-order non-linear --env ${ENV} --var DB_ATLAS=${DB_ATLAS} --url \"${DB_DATABASE_URL}\"",
    "create:seed:prod": "ENV=prod docker-compose run --rm -T -e ENV -e DB_ATLAS under-atlas sh -c 'atlas migrate new --env ${ENV} --var DB_ATLAS=${DB_ATLAS}'",
    "create:seed:dev": "ENV=dev docker-compose run --rm -T -e ENV -e DB_ATLAS under-atlas sh -c 'atlas migrate new --env ${ENV} --var DB_ATLAS=${DB_ATLAS}'",
    "create:seed:zipcode": "ENV=zipcode docker-compose run --rm -T -e ENV -e DB_ATLAS under-atlas sh -c 'atlas migrate new --env ${ENV} --var DB_ATLAS=${DB_ATLAS}'"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@faker-js/faker": "^9.9.0",
    "@types/amqplib": "^0.10.7",
    "@types/crypto-js": "^4.2.2",
    "@types/jest": "^30.0.0",
    "@types/module-alias": "^2.0.4",
    "@types/node": "^24.0.13",
    "@types/pg": "^8.15.4",
    "@types/qrcode": "^1.5.5",
    "@types/randomstring": "^1.3.0",
    "@types/ssh2": "^1.15.5",
    "@types/ws": "^8.18.1",
    "@typescript-eslint/eslint-plugin": "^8.36.0",
    "@typescript-eslint/parser": "^8.36.0",
    "@typescript-eslint/type-utils": "^8.36.0",
    "@typescript-eslint/utils": "^8.36.0",
    "eslint": "^9.31.0",
    "eslint-config-prettier": "^10.1.5",
    "eslint-plugin-prettier": "^5.5.1",
    "jest": "^30.0.4",
    "nodemon": "^3.1.10",
    "prettier": "^3.6.2",
    "sonar-scanner": "^3.1.0",
    "standard-version": "^9.5.0",
    "ts-jest": "^29.4.0",
    "ts-node": "^10.9.2",
    "tsc-alias": "^1.8.16",
    "tsconfig-paths": "^4.2.0",
    "tslib": "^2.8.1",
    "tsx": "^4.20.3",
    "turbo": "^2.5.4",
    "typescript": "^5.8.3",
    "undici": "^7.11.0",
    "undici-types": "^7.11.0"
  },
  "dependencies": {
    "@elastic/elasticsearch": "^9.0.3",
    "@fastify/auth": "^5.0.2",
    "@fastify/caching": "^9.0.3",
    "@fastify/cors": "^11.0.1",
    "@fastify/jwt": "^9.1.0",
    "@fastify/multipart": "^9.0.3",
    "@fastify/redis": "^7.0.2",
    "@fastify/swagger": "^9.5.1",
    "@fastify/swagger-ui": "^5.2.3",
    "@fastify/type-provider-typebox": "^5.1.0",
    "@scalar/fastify-api-reference": "^1.32.6",
    "@sinclair/typebox": "^0.34.37",
    "@temporalio/activity": "^1.12.1",
    "@temporalio/client": "^1.12.1",
    "@temporalio/worker": "^1.12.1",
    "@temporalio/workflow": "^1.12.1",
    "@types/lodash": "^4.17.20",
    "@types/uuid": "^10.0.0",
    "amqplib": "^0.10.8",
    "axios": "^1.10.0",
    "crypto-js": "^4.2.0",
    "dotenv": "^17.2.0",
    "drizzle-kit": "^0.31.4",
    "drizzle-orm": "^0.44.2",
    "elastic-builder": "^2.31.0",
    "fastify": "^5.4.0",
    "fastify-plugin": "^5.0.1",
    "i18next": "^25.3.2",
    "i18next-fs-backend": "^2.6.0",
    "i18next-http-middleware": "^3.7.4",
    "ioredis": "^5.6.1",
    "kafkajs": "^2.2.4",
    "lodash": "^4.17.21",
    "module-alias": "^2.2.3",
    "moment": "^2.30.1",
    "moment-timezone": "^0.6.0",
    "pg": "^8.16.3",
    "qrcode": "^1.5.4",
    "randomstring": "^1.3.1",
    "reflect-metadata": "^0.2.2",
    "sharp": "^0.34.3",
    "ssh2": "^1.16.0",
    "systeminformation": "^5.27.7",
    "tsyringe": "^4.10.0",
    "typescript-eslint": "^8.36.0",
    "uuid": "^11.1.0",
    "ws": "^8.18.3"
  },
  "pnpm": {
    "overrides": {
      "glob": "^8.0.0",
      "inflight": "^1.0.6"
    }
  }
}
