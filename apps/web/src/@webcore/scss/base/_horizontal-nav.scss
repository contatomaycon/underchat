@use '@webcore/scss/base/placeholders' as *;
@use '@webcore/scss/template/placeholders' as *;
@use '@configured-variables' as variables;
@use '@layouts/styles/mixins' as layoutsMixins;
@use '@webcore/scss/base/mixins';
@use 'vuetify/lib/styles/tools/states' as vuetifyStates;

.layout-horizontal-nav {
  @extend %nav;

  .nav-item-icon {
    @extend %horizontal-nav-item-icon;
  }

  .nav-link,
  .nav-group {
    &.disabled {
      @extend %horizontal-nav-disabled;
    }

    &.sub-item {
      @extend %horizontal-nav-subitem;
    }
  }

  .nav-link {
    @extend %nav-link;

    a {
      @extend %horizontal-nav-item;

      @include mixins.before-pseudo;

      @include vuetifyStates.states($active: false);
    }

    &:not(.sub-item) {
      a {
        @extend %horizontal-nav-top-level-item;

        &.router-link-active {
          @extend %nav-link-active;
        }
      }
    }

    &.sub-item {
      a {
        &.router-link-active {
          @extend %horizontal-nav-sub-nav-link-active;
        }
      }
    }
  }

  .nav-group {
    .popper-triggerer {
      .nav-group-label {
        @extend %horizontal-nav-item;
      }
    }

    > .popper-triggerer > .nav-group-label {
      @include mixins.before-pseudo;

      @include vuetifyStates.states($active: false);
    }

    .popper-content {
      @extend %horizontal-nav-popper-content;

      background-color: rgb(var(--v-theme-surface));

      > div {
        max-block-size: variables.$horizontal-nav-popper-content-max-height;
      }
    }

    &:not(.sub-item) {
      > .popper-triggerer {
        position: relative;

        &::after {
          position: absolute;
          block-size: variables.$horizontal-nav-popper-content-top;
          content: '';
          inline-size: 100%;
          inset-block-start: 100%;
          inset-inline-start: 0;
          pointer-events: none;
        }
      }

      &.show-content > .popper-triggerer::after {
        z-index: 2;
        pointer-events: auto;
      }

      > .popper-triggerer > .nav-group-label {
        @extend %horizontal-nav-top-level-item;
      }

      &.active {
        > .popper-triggerer > .nav-group-label {
          @extend %nav-link-active;
        }
      }

      > .popper-content {
        margin-block-start: variables.$horizontal-nav-popper-content-top !important;
      }
    }

    &.sub-item {
      &.active {
        @include mixins.selected-states(
          '> .popper-triggerer > .nav-group-label::before'
        );
      }

      .sub-item {
        .nav-item-icon {
          @extend %third-level-nav-item-icon;
        }
      }
    }

    .nav-group-arrow {
      font-size: variables.$horizontal-nav-group-arrow-icon-size;
      margin-inline-start: auto;
    }

    &.popper-inline-end {
      .nav-group-arrow {
        transform: rotateZ(270deg);

        @include layoutsMixins.rtl {
          transform: rotateZ(90deg);
        }
      }
    }

    .nav-item-title {
      @extend %horizontal-nav-item-title;
    }

    &.show-content {
      &:not(.active) {
        @include mixins.selected-states(
          '> .popper-triggerer > .nav-group-label::before'
        );
      }
    }
  }
}
